{"ast":null,"code":"import { LOAD_DATA, FILTER_DATA } from \"../actions/constants\";\n\nconst filterByFields = (filteredData, payload) => {\n  const {\n    transactionId\n  } = payload;\n  const newFilteredData = filteredData.filter(data => {\n    return data.transactionId.includes(transactionId);\n  });\n  debugger;\n  return filteredData;\n};\n\nconst initialState = {\n  data: [],\n  isLoading: true,\n  currentDisplayedData: []\n};\n\nconst trsReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case LOAD_DATA:\n      return { ...state,\n        data: payload,\n        currentDisplayedData: payload,\n        isLoading: false\n      };\n\n    case FILTER_DATA:\n      {\n        const filteredData = [...state.currentDisplayedData];\n        const newFilteredData = filterByFields(filteredData, payload);\n        return { ...state,\n          currentDisplayedData: newFilteredData\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default trsReducer;","map":{"version":3,"sources":["/Users/danielcohen/Desktop/nSureTest/nsure-test/src/store/reducers/trsReducer.js"],"names":["LOAD_DATA","FILTER_DATA","filterByFields","filteredData","payload","transactionId","newFilteredData","filter","data","includes","initialState","isLoading","currentDisplayedData","trsReducer","state","action","type"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,sBAAvC;;AAEA,MAAMC,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,OAA1B;AACA,QAAME,eAAe,GAAGH,YAAY,CAACI,MAAb,CAAqBC,IAAD,IAAU;AACpD,WAAOA,IAAI,CAACH,aAAL,CAAmBI,QAAnB,CAA4BJ,aAA5B,CAAP;AACD,GAFuB,CAAxB;AAGA;AAEA,SAAOF,YAAP;AACD,CARD;;AAUA,MAAMO,YAAY,GAAG;AACnBF,EAAAA,IAAI,EAAE,EADa;AAEnBG,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,oBAAoB,EAAE;AAHH,CAArB;;AAMA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQZ,IAAAA;AAAR,MAAoBW,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKhB,SAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELN,QAAAA,IAAI,EAAEJ,OAFD;AAGLQ,QAAAA,oBAAoB,EAAER,OAHjB;AAILO,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKV,WAAL;AAAkB;AAChB,cAAME,YAAY,GAAG,CAAC,GAAGW,KAAK,CAACF,oBAAV,CAArB;AACA,cAAMN,eAAe,GAAGJ,cAAc,CAACC,YAAD,EAAeC,OAAf,CAAtC;AACA,eAAO,EACL,GAAGU,KADE;AAELF,UAAAA,oBAAoB,EAAEN;AAFjB,SAAP;AAID;;AACD;AACE,aAAOQ,KAAP;AAjBJ;AAmBD,CArBD;;AAuBA,eAAeD,UAAf","sourcesContent":["import { LOAD_DATA, FILTER_DATA } from \"../actions/constants\";\n\nconst filterByFields = (filteredData, payload) => {\n  const { transactionId } = payload;\n  const newFilteredData = filteredData.filter((data) => {\n    return data.transactionId.includes(transactionId);\n  });\n  debugger;\n\n  return filteredData;\n};\n\nconst initialState = {\n  data: [],\n  isLoading: true,\n  currentDisplayedData: [],\n};\n\nconst trsReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_DATA:\n      return {\n        ...state,\n        data: payload,\n        currentDisplayedData: payload,\n        isLoading: false,\n      };\n    case FILTER_DATA: {\n      const filteredData = [...state.currentDisplayedData];\n      const newFilteredData = filterByFields(filteredData, payload);\n      return {\n        ...state,\n        currentDisplayedData: newFilteredData,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default trsReducer;\n"]},"metadata":{},"sourceType":"module"}