{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/danielcohen/Desktop/nSureTest/nSureTest/src/components/ui/dashboard/transaction/log/TransactionLog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getDeviceIcon, getPaymentType, getDotColor } from \"./helper\";\nimport { Text } from \"../../../common/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Pagination from \"../../../pagination/pagination\";\nexport const Container = styled.div`\n  background-color: white;\n  padding: 32px 0 88px 0;\n`;\n_c = Container;\nconst Tr = styled.tr`\n  height: 54px;\n  padding: 16px 0 0;\n  background-color: #ffffff;\n  border: 1px solid #e9e9e9;\n\n  > td span {\n    margin-left: 30px;\n    font-family: PingFangSC;\n    font-size: 14px;\n    line-height: 1.57;\n    color: rgba(0, 0, 0, 0.65);\n    display: block;\n  }\n`;\n_c2 = Tr;\nconst TableHeaders = styled.tr`\n  height: 54px;\n  padding: 16px 60px 16px 32px;\n  background-color: #fafafa;\n`;\nconst TableHeader = styled.th`\n  font-family: PingFangSC;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.57;\n  color: rgba(0, 0, 0, 0.65);\n  text-align: left;\n\n  > span {\n    margin: 0 32px 0 32px;\n  }\n`;\n_c3 = TableHeader;\nconst Table = styled.table`\n  margin-left: 32px;\n  width: calc(100% - 64px);\n  border-collapse: collapse;\n`;\nconst tableTitles = [\"Date/Time\", \"Name\", \"Device\", \"Payment\", \"BIN Number\", \"Amount\", \"Trans ID\", \"Decision\"];\n\nconst renderTableHeaders = () => {\n  const header = Object.keys(tableTitles);\n  return header.map((key, index) => {\n    return /*#__PURE__*/_jsxDEV(TableHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: tableTitles[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  });\n};\n\nconst renderTableData = data => {\n  return data.map((transaction, index) => {\n    const {\n      date,\n      firstName,\n      lastName,\n      device,\n      payment,\n      binNumber,\n      amount,\n      transactionId,\n      decision\n    } = transaction;\n    const name = `${firstName} ${lastName}`;\n    return /*#__PURE__*/_jsxDEV(Tr, {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getDeviceIcon(device),\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"32px\",\n              height: \"21px\"\n            },\n            src: getPaymentType(payment),\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: binNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `${amount}$`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [transactionId.slice(0, 10), \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              table: true,\n              color: getDotColor(decision),\n              children: decision\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  });\n};\n\nconst TransactionLog = ({\n  data,\n  displaycount,\n  currentDisplayedData,\n  startposition\n}) => {\n  _s();\n\n  const [placeData, setPlaceData] = useState([]);\n  displaycount = parseInt(displaycount);\n  startposition = parseInt(startposition);\n\n  if (startposition === 1) {\n    setPlaceData(prev => {\n      const paginatedData = data.slice(0, displaycount);\n      return [...prev, ...paginatedData];\n    });\n  }\n\n  if (startposition > 1) {\n    setPlaceData(prev => {\n      const paginatedData = data.slice(startposition * displaycount - displaycount, startposition * displaycount);\n      return [...prev, ...paginatedData];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: data.length > 0 && /*#__PURE__*/_jsxDEV(Pagination, {\n      displaycount: displaycount,\n      currentDisplayedData: currentDisplayedData,\n      startposition: startposition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionLog, \"H6/DhxLzmTH40egYTUUWaoGhwd8=\");\n\n_c4 = TransactionLog;\nexport default TransactionLog;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Tr\");\n$RefreshReg$(_c3, \"TableHeader\");\n$RefreshReg$(_c4, \"TransactionLog\");","map":{"version":3,"sources":["/Users/danielcohen/Desktop/nSureTest/nSureTest/src/components/ui/dashboard/transaction/log/TransactionLog.jsx"],"names":["React","useState","styled","getDeviceIcon","getPaymentType","getDotColor","Text","useDispatch","useSelector","Pagination","Container","div","Tr","tr","TableHeaders","TableHeader","th","Table","table","tableTitles","renderTableHeaders","header","Object","keys","map","key","index","renderTableData","data","transaction","date","firstName","lastName","device","payment","binNumber","amount","transactionId","decision","name","Date","toLocaleString","width","height","slice","TransactionLog","displaycount","currentDisplayedData","startposition","placeData","setPlaceData","parseInt","prev","paginatedData","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { getDeviceIcon, getPaymentType, getDotColor } from \"./helper\";\nimport { Text } from \"../../../common/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Pagination from \"../../../pagination/pagination\";\nexport const Container = styled.div`\n  background-color: white;\n  padding: 32px 0 88px 0;\n`;\n\nconst Tr = styled.tr`\n  height: 54px;\n  padding: 16px 0 0;\n  background-color: #ffffff;\n  border: 1px solid #e9e9e9;\n\n  > td span {\n    margin-left: 30px;\n    font-family: PingFangSC;\n    font-size: 14px;\n    line-height: 1.57;\n    color: rgba(0, 0, 0, 0.65);\n    display: block;\n  }\n`;\n\nconst TableHeaders = styled.tr`\n  height: 54px;\n  padding: 16px 60px 16px 32px;\n  background-color: #fafafa;\n`;\n\nconst TableHeader = styled.th`\n  font-family: PingFangSC;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.57;\n  color: rgba(0, 0, 0, 0.65);\n  text-align: left;\n\n  > span {\n    margin: 0 32px 0 32px;\n  }\n`;\nconst Table = styled.table`\n  margin-left: 32px;\n  width: calc(100% - 64px);\n  border-collapse: collapse;\n`;\n\nconst tableTitles = [\n  \"Date/Time\",\n  \"Name\",\n  \"Device\",\n  \"Payment\",\n  \"BIN Number\",\n  \"Amount\",\n  \"Trans ID\",\n  \"Decision\",\n];\n\nconst renderTableHeaders = () => {\n  const header = Object.keys(tableTitles);\n  return header.map((key, index) => {\n    return (\n      <TableHeader key={index}>\n        <span>{tableTitles[key]}</span>\n      </TableHeader>\n    );\n  });\n};\n\nconst renderTableData = (data) => {\n  return data.map((transaction, index) => {\n    const {\n      date,\n      firstName,\n      lastName,\n      device,\n      payment,\n      binNumber,\n      amount,\n      transactionId,\n      decision,\n    } = transaction;\n    const name = `${firstName} ${lastName}`;\n    return (\n      <Tr key={index}>\n        <td>\n          <span>{new Date(date).toLocaleString()}</span>\n        </td>\n        <td>\n          <span>{name}</span>\n        </td>\n        <td>\n          <span>{<img src={getDeviceIcon(device)} alt=\"\" />}</span>\n        </td>\n        <td>\n          <span>\n            {\n              <img\n                style={{ width: \"32px\", height: \"21px\" }}\n                src={getPaymentType(payment)}\n                alt=\"\"\n              />\n            }\n          </span>\n        </td>\n        <td>\n          <span>{binNumber}</span>\n        </td>\n        <td>\n          <span>{`${amount}$`}</span>\n        </td>\n        <td>\n          <span>{transactionId.slice(0, 10)}...</span>\n        </td>\n        <td>\n          <span>\n            <div>\n              <Text table color={getDotColor(decision)}>\n                {decision}\n              </Text>\n            </div>\n          </span>\n        </td>\n      </Tr>\n    );\n  });\n};\nconst TransactionLog = ({\n  data,\n  displaycount,\n  currentDisplayedData,\n  startposition,\n}) => {\n  const [placeData, setPlaceData] = useState([]);\n\n  displaycount = parseInt(displaycount);\n  startposition = parseInt(startposition);\n\n  if (startposition === 1) {\n    setPlaceData((prev) => {\n      const paginatedData = data.slice(0, displaycount);\n      return [...prev, ...paginatedData];\n    });\n  }\n\n  if (startposition > 1) {\n    setPlaceData((prev) => {\n      const paginatedData = data.slice(\n        startposition * displaycount - displaycount,\n        startposition * displaycount\n      );\n      return [...prev, ...paginatedData];\n    });\n  }\n  return (\n    <Container>\n      {/* <Table>\n        <tbody>\n          <TableHeaders>{renderTableHeaders()}</TableHeaders>\n          {data.length > 0 && renderTableData(placeData)}\n        </tbody>\n      </Table> */}\n      {data.length > 0 && (\n        <Pagination\n          displaycount={displaycount}\n          currentDisplayedData={currentDisplayedData}\n          startposition={startposition}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default TransactionLog;\n"]},"metadata":{},"sourceType":"module"}