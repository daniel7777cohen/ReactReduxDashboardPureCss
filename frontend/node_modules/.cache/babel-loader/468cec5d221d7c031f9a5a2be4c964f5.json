{"ast":null,"code":"import { LOAD_DATA, FILTER_DATA, SET_PAGINATION_COUNT, SET_START_POSITION, NEXT_PAGINATION, PREVIOUS_PAGINATION } from \"../actions/constants\";\nimport { filterByFields } from \"./helper\";\nconst initialState = {\n  data: [],\n  isLoading: true,\n  currentDisplayedData: [],\n  displayCount: 10,\n  startPosition: 1,\n  summary: []\n};\n\nconst trsReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case LOAD_DATA:\n      debugger;\n      const {\n        transactions,\n        summary\n      } = payload;\n      return { ...state,\n        data: transactions,\n        currentDisplayedData: transactions,\n        isLoading: false,\n        summary: summary\n      };\n\n    case FILTER_DATA:\n      {\n        const previousData = [...state.data];\n        const newFilteredData = filterByFields(previousData, payload);\n        return { ...state,\n          currentDisplayedData: newFilteredData,\n          isLoading: false\n        };\n      }\n    // Pagination Dropdown\n\n    case SET_PAGINATION_COUNT:\n      return { ...state,\n        displayCount: payload,\n        startPosition: 1\n      };\n\n    case SET_START_POSITION:\n      return { ...state,\n        startPosition: payload\n      };\n    // Next Arrow Pagination List\n\n    case NEXT_PAGINATION:\n      let nextposition = state.startPosition;\n\n      if (state.startPosition >= 1) {\n        nextposition = state.startPosition + 1;\n      }\n\n      return { ...state,\n        startPosition: nextposition\n      };\n    // Previous Pagination List\n\n    case PREVIOUS_PAGINATION:\n      let previousposition = state.startPosition;\n\n      if (state.startPosition !== 1) {\n        previousposition = state.startPosition - 1;\n      }\n\n      return { ...state,\n        startPosition: previousposition\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default trsReducer;","map":{"version":3,"sources":["/Users/danielcohen/Desktop/nSureTest/nSureTest/src/store/reducers/trsReducer.js"],"names":["LOAD_DATA","FILTER_DATA","SET_PAGINATION_COUNT","SET_START_POSITION","NEXT_PAGINATION","PREVIOUS_PAGINATION","filterByFields","initialState","data","isLoading","currentDisplayedData","displayCount","startPosition","summary","trsReducer","state","action","type","payload","transactions","previousData","newFilteredData","nextposition","previousposition"],"mappings":"AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,mBANF,QAOO,sBAPP;AAQA,SAASC,cAAT,QAA+B,UAA/B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,oBAAoB,EAAE,EAHH;AAInBC,EAAAA,YAAY,EAAE,EAJK;AAKnBC,EAAAA,aAAa,EAAE,CALI;AAMnBC,EAAAA,OAAO,EAAE;AANU,CAArB;;AASA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKjB,SAAL;AACE;AACA,YAAM;AAAEmB,QAAAA,YAAF;AAAgBN,QAAAA;AAAhB,UAA4BK,OAAlC;AACA,aAAO,EACL,GAAGH,KADE;AAELP,QAAAA,IAAI,EAAEW,YAFD;AAGLT,QAAAA,oBAAoB,EAAES,YAHjB;AAILV,QAAAA,SAAS,EAAE,KAJN;AAKLI,QAAAA,OAAO,EAAEA;AALJ,OAAP;;AAOF,SAAKZ,WAAL;AAAkB;AAChB,cAAMmB,YAAY,GAAG,CAAC,GAAGL,KAAK,CAACP,IAAV,CAArB;AACA,cAAMa,eAAe,GAAGf,cAAc,CAACc,YAAD,EAAeF,OAAf,CAAtC;AACA,eAAO,EACL,GAAGH,KADE;AAELL,UAAAA,oBAAoB,EAAEW,eAFjB;AAGLZ,UAAAA,SAAS,EAAE;AAHN,SAAP;AAKD;AACD;;AACA,SAAKP,oBAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,YAAY,EAAEO,OAFT;AAGLN,QAAAA,aAAa,EAAE;AAHV,OAAP;;AAKF,SAAKT,kBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,aAAa,EAAEM;AAFV,OAAP;AAIF;;AACA,SAAKd,eAAL;AACE,UAAIkB,YAAY,GAAGP,KAAK,CAACH,aAAzB;;AACA,UAAIG,KAAK,CAACH,aAAN,IAAuB,CAA3B,EAA8B;AAC5BU,QAAAA,YAAY,GAAGP,KAAK,CAACH,aAAN,GAAsB,CAArC;AACD;;AACD,aAAO,EACL,GAAGG,KADE;AAELH,QAAAA,aAAa,EAAEU;AAFV,OAAP;AAIF;;AACA,SAAKjB,mBAAL;AACE,UAAIkB,gBAAgB,GAAGR,KAAK,CAACH,aAA7B;;AACA,UAAIG,KAAK,CAACH,aAAN,KAAwB,CAA5B,EAA+B;AAC7BW,QAAAA,gBAAgB,GAAGR,KAAK,CAACH,aAAN,GAAsB,CAAzC;AACD;;AACD,aAAO,EACL,GAAGG,KADE;AAELH,QAAAA,aAAa,EAAEW;AAFV,OAAP;;AAIF;AACE,aAAOR,KAAP;AArDJ;AAuDD,CAzDD;;AA2DA,eAAeD,UAAf","sourcesContent":["import {\n  LOAD_DATA,\n  FILTER_DATA,\n  SET_PAGINATION_COUNT,\n  SET_START_POSITION,\n  NEXT_PAGINATION,\n  PREVIOUS_PAGINATION,\n} from \"../actions/constants\";\nimport { filterByFields } from \"./helper\";\n\nconst initialState = {\n  data: [],\n  isLoading: true,\n  currentDisplayedData: [],\n  displayCount: 10,\n  startPosition: 1,\n  summary: [],\n};\n\nconst trsReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_DATA:\n      debugger;\n      const { transactions, summary } = payload;\n      return {\n        ...state,\n        data: transactions,\n        currentDisplayedData: transactions,\n        isLoading: false,\n        summary: summary,\n      };\n    case FILTER_DATA: {\n      const previousData = [...state.data];\n      const newFilteredData = filterByFields(previousData, payload);\n      return {\n        ...state,\n        currentDisplayedData: newFilteredData,\n        isLoading: false,\n      };\n    }\n    // Pagination Dropdown\n    case SET_PAGINATION_COUNT:\n      return {\n        ...state,\n        displayCount: payload,\n        startPosition: 1,\n      };\n    case SET_START_POSITION:\n      return {\n        ...state,\n        startPosition: payload,\n      };\n    // Next Arrow Pagination List\n    case NEXT_PAGINATION:\n      let nextposition = state.startPosition;\n      if (state.startPosition >= 1) {\n        nextposition = state.startPosition + 1;\n      }\n      return {\n        ...state,\n        startPosition: nextposition,\n      };\n    // Previous Pagination List\n    case PREVIOUS_PAGINATION:\n      let previousposition = state.startPosition;\n      if (state.startPosition !== 1) {\n        previousposition = state.startPosition - 1;\n      }\n      return {\n        ...state,\n        startPosition: previousposition,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trsReducer;\n"]},"metadata":{},"sourceType":"module"}