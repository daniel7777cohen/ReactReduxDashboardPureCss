{"ast":null,"code":"export const filterByFields = (filteredData, payload) => {\n  const {\n    transactionId,\n    binNumber,\n    min,\n    max,\n    decision,\n    payment\n  } = payload;\n  let newFilteredData = filteredData.filter(data => data.transactionId.includes(transactionId) && data.binNumber.includes(binNumber) && data.amount >= min && data.amount <= max);\n\n  if (decision !== \"all\") {\n    newFilteredData = newFilteredData.filter(data => data.decision === decision);\n  }\n\n  if (payment !== \"all\") {\n    debugger;\n    newFilteredData = newFilteredData.filter(data => data.payment === payment);\n  }\n\n  return newFilteredData;\n};","map":{"version":3,"sources":["/Users/danielcohen/Desktop/nSureTest/nsure-test/src/store/reducers/helper.js"],"names":["filterByFields","filteredData","payload","transactionId","binNumber","min","max","decision","payment","newFilteredData","filter","data","includes","amount"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AACvD,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,SAAjB;AAA4BC,IAAAA,GAA5B;AAAiCC,IAAAA,GAAjC;AAAsCC,IAAAA,QAAtC;AAAgDC,IAAAA;AAAhD,MAA4DN,OAAlE;AACA,MAAIO,eAAe,GAAGR,YAAY,CAACS,MAAb,CACnBC,IAAD,IACEA,IAAI,CAACR,aAAL,CAAmBS,QAAnB,CAA4BT,aAA5B,KACAQ,IAAI,CAACP,SAAL,CAAeQ,QAAf,CAAwBR,SAAxB,CADA,IAEAO,IAAI,CAACE,MAAL,IAAeR,GAFf,IAGAM,IAAI,CAACE,MAAL,IAAeP,GALG,CAAtB;;AAQA,MAAIC,QAAQ,KAAK,KAAjB,EAAwB;AACtBE,IAAAA,eAAe,GAAGA,eAAe,CAACC,MAAhB,CACfC,IAAD,IAAUA,IAAI,CAACJ,QAAL,KAAkBA,QADZ,CAAlB;AAGD;;AAED,MAAIC,OAAO,KAAK,KAAhB,EAAuB;AACnB;AACFC,IAAAA,eAAe,GAAGA,eAAe,CAACC,MAAhB,CACfC,IAAD,IAAUA,IAAI,CAACH,OAAL,KAAiBA,OADX,CAAlB;AAGD;;AAED,SAAOC,eAAP;AACD,CAxBM","sourcesContent":["export const filterByFields = (filteredData, payload) => {\n  const { transactionId, binNumber, min, max, decision, payment } = payload;\n  let newFilteredData = filteredData.filter(\n    (data) =>\n      data.transactionId.includes(transactionId) &&\n      data.binNumber.includes(binNumber) &&\n      data.amount >= min &&\n      data.amount <= max\n  );\n\n  if (decision !== \"all\") {\n    newFilteredData = newFilteredData.filter(\n      (data) => data.decision === decision\n    );\n  }\n\n  if (payment !== \"all\") {\n      debugger\n    newFilteredData = newFilteredData.filter(\n      (data) => data.payment === payment\n    );\n  }\n\n  return newFilteredData;\n};\n"]},"metadata":{},"sourceType":"module"}