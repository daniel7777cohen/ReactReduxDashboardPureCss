{"ast":null,"code":"import { LOAD_DATA, FILTER_DATA, PAGINATION_DATA, PAGINATION_LOAD, NEXT_PAGINATION, PREVIOUS_PAGINATION } from \"./constants\";\nimport { fetchTrs } from \"../../api/transactions\";\nimport { setAlert } from \"./alert\";\nexport const loadTransactions = () => async dispatch => {\n  try {\n    const fetchedData = await fetchTrs();\n    dispatch({\n      type: LOAD_DATA,\n      payload: fetchedData.transactions\n    });\n    dispatch(setAlert(\"transactions log loaded successfully\", \"success\"));\n  } catch (error) {\n    const {\n      errors\n    } = error.response.data;\n\n    if (errors) {\n      errors.forEach(e => {\n        dispatch(setAlert(e.msg, \"danger\"));\n      });\n    }\n  }\n};\nexport const filterData = filterFields => dispatch => {\n  dispatch({\n    type: FILTER_DATA,\n    payload: filterFields\n  });\n};\nexport const paginationData = id => dispatch => {\n  dispatch({\n    type: PAGINATION_DATA,\n    payload: id\n  });\n};\nexport const paginationLoad = id => dispatch => {\n  dispatch({\n    type: PAGINATION_LOAD,\n    payload: id\n  });\n};\nexport const nextPagination = id => dispatch => {\n  dispatch({\n    type: NEXT_PAGINATION,\n    payload: id\n  });\n};\nexport const previousPagination = id => dispatch => {\n  dispatch({\n    type: PREVIOUS_PAGINATION,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/danielcohen/Desktop/nSureTest/nSureTest/src/store/actions/trs.js"],"names":["LOAD_DATA","FILTER_DATA","PAGINATION_DATA","PAGINATION_LOAD","NEXT_PAGINATION","PREVIOUS_PAGINATION","fetchTrs","setAlert","loadTransactions","dispatch","fetchedData","type","payload","transactions","error","errors","response","data","forEach","e","msg","filterData","filterFields","paginationData","id","paginationLoad","nextPagination","previousPagination"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAgCC,eAAhC,EAAgDC,eAAhD,EAAgEC,eAAhE,EAAgFC,mBAAhF,QAA4G,aAA5G;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAGA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACF,UAAMC,WAAW,GAAG,MAAMJ,QAAQ,EAAlC;AACAG,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEX,SADC;AAEPY,MAAAA,OAAO,EAAEF,WAAW,CAACG;AAFd,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAACF,QAAQ,CAAC,sCAAD,EAAyC,SAAzC,CAAT,CAAR;AACD,GAPD,CAOE,OAAOO,KAAP,EAAc;AACd,UAAM;AAAEC,MAAAA;AAAF,QAAaD,KAAK,CAACE,QAAN,CAAeC,IAAlC;;AACA,QAAIF,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,OAAP,CAAgBC,CAAD,IAAO;AACpBV,QAAAA,QAAQ,CAACF,QAAQ,CAACY,CAAC,CAACC,GAAH,EAAQ,QAAR,CAAT,CAAR;AACD,OAFD;AAGD;AACF;AACF,CAhBM;AAkBP,OAAO,MAAMC,UAAU,GAAIC,YAAD,IAAmBb,QAAD,IAAc;AACxDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEV,WADC;AAEPW,IAAAA,OAAO,EAAEU;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMC,cAAc,GAAIC,EAAD,IAASf,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAET,eADC;AAEPU,IAAAA,OAAO,EAAEY;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMC,cAAc,GAAID,EAAD,IAASf,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAER,eADC;AAEPS,IAAAA,OAAO,EAAEY;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAME,cAAc,GAAIF,EAAD,IAASf,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEP,eADC;AAEPQ,IAAAA,OAAO,EAAEY;AAFF,GAAD,CAAR;AAID,CALM;AAQP,OAAO,MAAMG,kBAAkB,GAAIH,EAAD,IAASf,QAAD,IAAc;AACtDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEN,mBADC;AAEPO,IAAAA,OAAO,EAAEY;AAFF,GAAD,CAAR;AAID,CALM","sourcesContent":["import { LOAD_DATA, FILTER_DATA,PAGINATION_DATA,PAGINATION_LOAD,NEXT_PAGINATION,PREVIOUS_PAGINATION  } from \"./constants\";\nimport { fetchTrs } from \"../../api/transactions\";\nimport { setAlert } from \"./alert\";\n\n\nexport const loadTransactions = () => async (dispatch) => {\n  try {\n    const fetchedData = await fetchTrs();\n    dispatch({\n      type: LOAD_DATA,\n      payload: fetchedData.transactions,\n    });\n    dispatch(setAlert(\"transactions log loaded successfully\", \"success\"));\n  } catch (error) {\n    const { errors } = error.response.data;\n    if (errors) {\n      errors.forEach((e) => {\n        dispatch(setAlert(e.msg, \"danger\"));\n      });\n    }\n  }\n};\n\nexport const filterData = (filterFields) => (dispatch) => {\n  dispatch({\n    type: FILTER_DATA,\n    payload: filterFields,\n  });\n};\n\nexport const paginationData = (id) => (dispatch) => {\n  dispatch({\n    type: PAGINATION_DATA,\n    payload: id,\n  });\n};\n\nexport const paginationLoad = (id) => (dispatch) => {\n  dispatch({\n    type: PAGINATION_LOAD,\n    payload: id,\n  });\n};\n\nexport const nextPagination = (id) => (dispatch) => {\n  dispatch({\n    type: NEXT_PAGINATION,\n    payload: id,\n  });\n};\n\n\nexport const previousPagination = (id) => (dispatch) => {\n  dispatch({\n    type: PREVIOUS_PAGINATION ,\n    payload: id,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}