{"ast":null,"code":"import { LOAD_DATA, FILTER_DATA, PAGINATION_DATA, PAGINATION_LOAD, NEXT_PAGINATION, PREVIOUS_PAGINATION } from \"../actions/constants\";\nimport { filterByFields } from \"./helper\";\nconst initialState = {\n  data: [],\n  isLoading: true,\n  currentDisplayedData: [],\n  displayCount: 10,\n  startposition: 1\n};\n\nconst trsReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case LOAD_DATA:\n      return { ...state,\n        data: payload,\n        currentDisplayedData: payload,\n        isLoading: false\n      };\n\n    case FILTER_DATA:\n      {\n        const previousData = [...state.data];\n        const newFilteredData = filterByFields(previousData, payload);\n        return { ...state,\n          currentDisplayedData: newFilteredData,\n          isLoading: false\n        };\n      }\n    // Pagination Dropdown displyRecordhandler function in pagination component\n\n    case PAGINATION_DATA:\n      return { ...state,\n        displayCount: payload,\n        startposition: 1\n      };\n    // Default Position of Pagniation (Always 1)\n\n    case PAGINATION_LOAD:\n      return { ...state,\n        startposition: payload\n      };\n    // Next Arrow Pagination List\n\n    case NEXT_PAGINATION:\n      let nextposition = state.startposition;\n\n      if (state.startposition > 1) {\n        nextposition = state.startposition + 1;\n      }\n\n      return { ...state,\n        startposition: nextposition\n      };\n    // Previous Pagination List\n\n    case PREVIOUS_PAGINATION:\n      let previousposition = state.startposition;\n\n      if (state.startposition != 1) {\n        previousposition = state.startposition - 1;\n      }\n\n      return { ...state,\n        startposition: previousposition\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default trsReducer;","map":{"version":3,"sources":["/Users/danielcohen/Desktop/nSureTest/nSureTest/src/store/reducers/trsReducer.js"],"names":["LOAD_DATA","FILTER_DATA","PAGINATION_DATA","PAGINATION_LOAD","NEXT_PAGINATION","PREVIOUS_PAGINATION","filterByFields","initialState","data","isLoading","currentDisplayedData","displayCount","startposition","trsReducer","state","action","type","payload","previousData","newFilteredData","nextposition","previousposition"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAgCC,eAAhC,EAAgDC,eAAhD,EAAgEC,eAAhE,EAAgFC,mBAAhF,QAA4G,sBAA5G;AACA,SAASC,cAAT,QAA+B,UAA/B;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,oBAAoB,EAAE,EAHH;AAInBC,EAAAA,YAAY,EAAC,EAJM;AAKnBC,EAAAA,aAAa,EAAC;AALK,CAArB;;AASA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKhB,SAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELN,QAAAA,IAAI,EAAES,OAFD;AAGLP,QAAAA,oBAAoB,EAAEO,OAHjB;AAILR,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKR,WAAL;AAAkB;AAChB,cAAMiB,YAAY,GAAG,CAAC,GAAGJ,KAAK,CAACN,IAAV,CAArB;AACA,cAAMW,eAAe,GAAGb,cAAc,CAACY,YAAD,EAAeD,OAAf,CAAtC;AACA,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,oBAAoB,EAAES,eAFjB;AAGLV,UAAAA,SAAS,EAAE;AAHN,SAAP;AAKD;AACD;;AACA,SAAKP,eAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELH,QAAAA,YAAY,EAAEM,OAFT;AAGLL,QAAAA,aAAa,EAAE;AAHV,OAAP;AAKA;;AACA,SAAKT,eAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELF,QAAAA,aAAa,EAAEK;AAFV,OAAP;AAIF;;AACA,SAAKb,eAAL;AACE,UAAIgB,YAAY,GAAGN,KAAK,CAACF,aAAzB;;AACA,UAAGE,KAAK,CAACF,aAAN,GAAsB,CAAzB,EAA2B;AACzBQ,QAAAA,YAAY,GAAGN,KAAK,CAACF,aAAN,GAAsB,CAArC;AACD;;AACD,aAAO,EACH,GAAGE,KADA;AAEHF,QAAAA,aAAa,EAAEQ;AAFZ,OAAP;AAIF;;AACA,SAAKf,mBAAL;AACE,UAAIgB,gBAAgB,GAAGP,KAAK,CAACF,aAA7B;;AACA,UAAGE,KAAK,CAACF,aAAN,IAAuB,CAA1B,EAA4B;AAC1BS,QAAAA,gBAAgB,GAAGP,KAAK,CAACF,aAAN,GAAsB,CAAzC;AACD;;AACD,aAAO,EACL,GAAGE,KADE;AAELF,QAAAA,aAAa,EAAES;AAFV,OAAP;;AAIJ;AACE,aAAOP,KAAP;AAnDJ;AAqDD,CAvDD;;AAyDA,eAAeD,UAAf","sourcesContent":["import { LOAD_DATA, FILTER_DATA,PAGINATION_DATA,PAGINATION_LOAD,NEXT_PAGINATION,PREVIOUS_PAGINATION  } from \"../actions/constants\";\nimport { filterByFields } from \"./helper\";\n\n\n\nconst initialState = {\n  data: [],\n  isLoading: true,\n  currentDisplayedData: [],\n  displayCount:10, \n  startposition:1,\n};\n\n\nconst trsReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_DATA:\n      return {\n        ...state,\n        data: payload,\n        currentDisplayedData: payload,\n        isLoading: false,\n      };\n    case FILTER_DATA: {\n      const previousData = [...state.data];\n      const newFilteredData = filterByFields(previousData, payload);\n      return {\n        ...state,\n        currentDisplayedData: newFilteredData,\n        isLoading: false,\n      };\n    }\n    // Pagination Dropdown displyRecordhandler function in pagination component\n    case PAGINATION_DATA:\n      return {\n        ...state,\n        displayCount: payload,\n        startposition: 1\n      };\n      // Default Position of Pagniation (Always 1)\n      case PAGINATION_LOAD :\n        return {\n          ...state,\n          startposition: payload\n        };\n      // Next Arrow Pagination List\n      case NEXT_PAGINATION :\n        let nextposition = state.startposition;\n        if(state.startposition > 1){\n          nextposition = state.startposition + 1;\n        }\n        return {\n            ...state,\n            startposition: nextposition\n         };\n      // Previous Pagination List\n      case PREVIOUS_PAGINATION :\n        let previousposition = state.startposition;\n        if(state.startposition != 1){\n          previousposition = state.startposition - 1;\n        }\n        return {\n          ...state,\n          startposition: previousposition\n        };\n    default:\n      return state;\n  }\n};\n\nexport default trsReducer;\n"]},"metadata":{},"sourceType":"module"}