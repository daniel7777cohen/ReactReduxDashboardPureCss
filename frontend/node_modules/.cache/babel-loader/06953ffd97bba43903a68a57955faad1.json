{"ast":null,"code":"import { LOAD_DATA, FILTER_DATA } from \"../actions/constants\";\nimport { filterByFields } from \"./helper\";\nconst initialState = {\n  data: [],\n  isLoading: true,\n  currentDisplayedData: []\n};\n\nconst trsReducer = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case LOAD_DATA:\n      return { ...state,\n        data: payload,\n        currentDisplayedData: payload,\n        isLoading: false\n      };\n\n    case FILTER_DATA:\n      {\n        const previousData = [...state.data];\n        const newFilteredData = filterByFields(previousData, payload);\n        return { ...state,\n          currentDisplayedData: newFilteredData,\n          isLoading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default trsReducer;","map":{"version":3,"sources":["/Users/danielcohen/Desktop/nSureTest/nsure-test/src/store/reducers/trsReducer.js"],"names":["LOAD_DATA","FILTER_DATA","filterByFields","initialState","data","isLoading","currentDisplayedData","trsReducer","state","action","type","payload","previousData","newFilteredData"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,sBAAvC;AACA,SAASC,cAAT,QAA+B,UAA/B;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,oBAAoB,EAAE;AAHH,CAArB;;AAOA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACnD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACE,SAAKV,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,IAAI,EAAEO,OAFD;AAGLL,QAAAA,oBAAoB,EAAEK,OAHjB;AAILN,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKJ,WAAL;AAAkB;AAChB,cAAMW,YAAY,GAAG,CAAC,GAAGJ,KAAK,CAACJ,IAAV,CAArB;AACA,cAAMS,eAAe,GAAGX,cAAc,CAACU,YAAD,EAAeD,OAAf,CAAtC;AACA,eAAO,EACL,GAAGH,KADE;AAELF,UAAAA,oBAAoB,EAAEO,eAFjB;AAGLR,UAAAA,SAAS,EAAE;AAHN,SAAP;AAKD;;AACD;AACE,aAAOG,KAAP;AAlBJ;AAoBD,CAtBD;;AAwBA,eAAeD,UAAf","sourcesContent":["import { LOAD_DATA, FILTER_DATA } from \"../actions/constants\";\nimport { filterByFields } from \"./helper\";\n\n\n\nconst initialState = {\n  data: [],\n  isLoading: true,\n  currentDisplayedData: [],\n};\n\n\nconst trsReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case LOAD_DATA:\n      return {\n        ...state,\n        data: payload,\n        currentDisplayedData: payload,\n        isLoading: false,\n      };\n    case FILTER_DATA: {\n      const previousData = [...state.data];\n      const newFilteredData = filterByFields(previousData, payload);\n      return {\n        ...state,\n        currentDisplayedData: newFilteredData,\n        isLoading: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default trsReducer;\n"]},"metadata":{},"sourceType":"module"}