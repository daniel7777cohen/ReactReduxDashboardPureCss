{"ast":null,"code":"import { LOAD_DATA, FILTER_DATA, SET_PAGINATION_COUNT, SET_START_POSITION, NEXT_PAGINATION, PREVIOUS_PAGINATION } from \"./constants\";\nimport { fetchTrs } from \"../../api/transactions\";\nimport { setAlert } from \"./alert\";\nexport const loadTransactions = () => async dispatch => {\n  try {\n    const fetchedData = await fetchTrs();\n    dispatch({\n      type: LOAD_DATA,\n      payload: fetchedData.transactions\n    });\n    dispatch(setAlert(\"transactions log loaded successfully\", \"success\"));\n  } catch (error) {\n    if (!error.response) {\n      dispatch(setAlert(error.message, \"danger\"));\n    } else {\n      const {\n        errors\n      } = error.response.data;\n\n      if (errors) {\n        errors.forEach(e => {\n          dispatch(setAlert(e.msg, \"danger\"));\n        });\n      }\n    }\n  }\n};\nexport const filterData = filterFields => dispatch => {\n  dispatch({\n    type: FILTER_DATA,\n    payload: filterFields\n  });\n};\nexport const setPaginationCount = paginationCount => dispatch => {\n  dispatch({\n    type: SET_PAGINATION_COUNT,\n    payload: paginationCount\n  });\n};\nexport const setStartPosition = id => dispatch => {\n  dispatch({\n    type: SET_START_POSITION,\n    payload: id\n  });\n};\nexport const nextPagination = id => dispatch => {\n  dispatch({\n    type: NEXT_PAGINATION,\n    payload: id\n  });\n};\nexport const previousPagination = id => dispatch => {\n  dispatch({\n    type: PREVIOUS_PAGINATION,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/danielcohen/Desktop/nSureTest/nSureTest/src/store/actions/trs.js"],"names":["LOAD_DATA","FILTER_DATA","SET_PAGINATION_COUNT","SET_START_POSITION","NEXT_PAGINATION","PREVIOUS_PAGINATION","fetchTrs","setAlert","loadTransactions","dispatch","fetchedData","type","payload","transactions","error","response","message","errors","data","forEach","e","msg","filterData","filterFields","setPaginationCount","paginationCount","setStartPosition","id","nextPagination","previousPagination"],"mappings":"AAAA,SACEA,SADF,EAEEC,WAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,mBANF,QAOO,aAPP;AAQA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,SAAzB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACF,UAAMC,WAAW,GAAG,MAAMJ,QAAQ,EAAlC;AACAG,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEX,SADC;AAEPY,MAAAA,OAAO,EAAEF,WAAW,CAACG;AAFd,KAAD,CAAR;AAIAJ,IAAAA,QAAQ,CAACF,QAAQ,CAAC,sCAAD,EAAyC,SAAzC,CAAT,CAAR;AACD,GAPD,CAOE,OAAOO,KAAP,EAAc;AACd,QAAI,CAACA,KAAK,CAACC,QAAX,EAAqB;AACnBN,MAAAA,QAAQ,CAACF,QAAQ,CAACO,KAAK,CAACE,OAAP,EAAgB,QAAhB,CAAT,CAAR;AACD,KAFD,MAEO;AACL,YAAM;AAAEC,QAAAA;AAAF,UAAaH,KAAK,CAACC,QAAN,CAAeG,IAAlC;;AACA,UAAID,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACE,OAAP,CAAgBC,CAAD,IAAO;AACpBX,UAAAA,QAAQ,CAACF,QAAQ,CAACa,CAAC,CAACC,GAAH,EAAQ,QAAR,CAAT,CAAR;AACD,SAFD;AAGD;AACF;AACF;AACF,CApBM;AAsBP,OAAO,MAAMC,UAAU,GAAIC,YAAD,IAAmBd,QAAD,IAAc;AACxDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEV,WADC;AAEPW,IAAAA,OAAO,EAAEW;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMC,kBAAkB,GAAIC,eAAD,IAAsBhB,QAAD,IAAc;AACnEA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAET,oBADC;AAEPU,IAAAA,OAAO,EAAEa;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMC,gBAAgB,GAAIC,EAAD,IAASlB,QAAD,IAAc;AACpDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAER,kBADC;AAEPS,IAAAA,OAAO,EAAEe;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAMC,cAAc,GAAID,EAAD,IAASlB,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEP,eADC;AAEPQ,IAAAA,OAAO,EAAEe;AAFF,GAAD,CAAR;AAID,CALM;AAOP,OAAO,MAAME,kBAAkB,GAAIF,EAAD,IAASlB,QAAD,IAAc;AACtDA,EAAAA,QAAQ,CAAC;AACPE,IAAAA,IAAI,EAAEN,mBADC;AAEPO,IAAAA,OAAO,EAAEe;AAFF,GAAD,CAAR;AAID,CALM","sourcesContent":["import {\n  LOAD_DATA,\n  FILTER_DATA,\n  SET_PAGINATION_COUNT,\n  SET_START_POSITION,\n  NEXT_PAGINATION,\n  PREVIOUS_PAGINATION,\n} from \"./constants\";\nimport { fetchTrs } from \"../../api/transactions\";\nimport { setAlert } from \"./alert\";\n\nexport const loadTransactions = () => async (dispatch) => {\n  try {\n    const fetchedData = await fetchTrs();\n    dispatch({\n      type: LOAD_DATA,\n      payload: fetchedData.transactions,\n    });\n    dispatch(setAlert(\"transactions log loaded successfully\", \"success\"));\n  } catch (error) {\n    if (!error.response) {\n      dispatch(setAlert(error.message, \"danger\"));\n    } else {\n      const { errors } = error.response.data;\n      if (errors) {\n        errors.forEach((e) => {\n          dispatch(setAlert(e.msg, \"danger\"));\n        });\n      }\n    }\n  }\n};\n\nexport const filterData = (filterFields) => (dispatch) => {\n  dispatch({\n    type: FILTER_DATA,\n    payload: filterFields,\n  });\n};\n\nexport const setPaginationCount = (paginationCount) => (dispatch) => {\n  dispatch({\n    type: SET_PAGINATION_COUNT,\n    payload: paginationCount,\n  });\n};\n\nexport const setStartPosition = (id) => (dispatch) => {\n  dispatch({\n    type: SET_START_POSITION,\n    payload: id,\n  });\n};\n\nexport const nextPagination = (id) => (dispatch) => {\n  dispatch({\n    type: NEXT_PAGINATION,\n    payload: id,\n  });\n};\n\nexport const previousPagination = (id) => (dispatch) => {\n  dispatch({\n    type: PREVIOUS_PAGINATION,\n    payload: id,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}